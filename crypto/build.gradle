dependencies {
    implementation project(":common")

    implementation 'com.github.multiformats:java-multibase:1.1.0'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    implementation 'net.openhft:zero-allocation-hashing:0.16'
}

test {
    systemProperty "java.library.path", file("${buildDir}/jni-crypto/release").absolutePath
}

task compileRust {
    doLast {
// TODO 'MasOS support problem'. Uncomment it and adjust compiler or consider another approach to get compiled libraries.
        exec {
            workingDir 'src/jni-crypto'
            commandLine 'cargo', 'build', '--release', '--target=x86_64-apple-darwin', '--target-dir=../../build/jni-crypto'
        }
//        exec {
//            workingDir 'src/jni-crypto'
//            commandLine 'cargo', 'build', '--release', '--target=x86_64-unknown-linux-gnu', '--target-dir=../../build/jni-crypto'
//        }
// TODO the build of the native library will be moved out of the project
//        exec {
//            workingDir 'src/jni-crypto'
//            commandLine 'cargo', 'build', '--release', '--target=x86_64-pc-windows-gnu', '--target-dir=../../build/jni-crypto'
//        }
    }
}

compileJava.dependsOn(compileRust)

processResources {
    from("${buildDir}/jni-crypto/x86_64-apple-darwin/release") {
        into "include/macos"
        include '*.dylib'
    }
    from("${buildDir}/jni-crypto/x86_64-unknown-linux-gnu/release") {
        into "include/linux"
        include '*.so'
    }
    from("${buildDir}/jni-crypto/x86_64-pc-windows-gnu/release") {
        into "include/windows"
        include '*.dll'
    }
}